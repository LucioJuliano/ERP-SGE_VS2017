//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Controles.WsCep {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsCep.wscepSoap")]
    public interface wscepSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet cep(string strcep);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface wscepSoapChannel : Controles.WsCep.wscepSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class wscepSoapClient : System.ServiceModel.ClientBase<Controles.WsCep.wscepSoap>, Controles.WsCep.wscepSoap {
        
        public wscepSoapClient() {
        }
        
        public wscepSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wscepSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wscepSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wscepSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet cep(string strcep) {
            return base.Channel.cep(strcep);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsCep.wscepHttpGet")]
    public interface wscepHttpGet {
        
        // CODEGEN: Generating message contract since the operation cep is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/wscepHttpGet/cepRequest", ReplyAction="http://tempuri.org/wscepHttpGet/cepResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Controles.WsCep.cepResponse cep(Controles.WsCep.cepRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class cepRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string strcep;
        
        public cepRequest() {
        }
        
        public cepRequest(string strcep) {
            this.strcep = strcep;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class cepResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet DataSet;
        
        public cepResponse() {
        }
        
        public cepResponse(System.Data.DataSet DataSet) {
            this.DataSet = DataSet;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface wscepHttpGetChannel : Controles.WsCep.wscepHttpGet, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class wscepHttpGetClient : System.ServiceModel.ClientBase<Controles.WsCep.wscepHttpGet>, Controles.WsCep.wscepHttpGet {
        
        public wscepHttpGetClient() {
        }
        
        public wscepHttpGetClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wscepHttpGetClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wscepHttpGetClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wscepHttpGetClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Controles.WsCep.cepResponse Controles.WsCep.wscepHttpGet.cep(Controles.WsCep.cepRequest request) {
            return base.Channel.cep(request);
        }
        
        public System.Data.DataSet cep(string strcep) {
            Controles.WsCep.cepRequest inValue = new Controles.WsCep.cepRequest();
            inValue.strcep = strcep;
            Controles.WsCep.cepResponse retVal = ((Controles.WsCep.wscepHttpGet)(this)).cep(inValue);
            return retVal.DataSet;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsCep.wscepHttpPost")]
    public interface wscepHttpPost {
        
        // CODEGEN: Generating message contract since the operation cep is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/wscepHttpPost/cepRequest", ReplyAction="http://tempuri.org/wscepHttpPost/cepResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Controles.WsCep.cepResponse1 cep(Controles.WsCep.cepRequest1 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class cepRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string strcep;
        
        public cepRequest1() {
        }
        
        public cepRequest1(string strcep) {
            this.strcep = strcep;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class cepResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet DataSet;
        
        public cepResponse1() {
        }
        
        public cepResponse1(System.Data.DataSet DataSet) {
            this.DataSet = DataSet;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface wscepHttpPostChannel : Controles.WsCep.wscepHttpPost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class wscepHttpPostClient : System.ServiceModel.ClientBase<Controles.WsCep.wscepHttpPost>, Controles.WsCep.wscepHttpPost {
        
        public wscepHttpPostClient() {
        }
        
        public wscepHttpPostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wscepHttpPostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wscepHttpPostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wscepHttpPostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Controles.WsCep.cepResponse1 Controles.WsCep.wscepHttpPost.cep(Controles.WsCep.cepRequest1 request) {
            return base.Channel.cep(request);
        }
        
        public System.Data.DataSet cep(string strcep) {
            Controles.WsCep.cepRequest1 inValue = new Controles.WsCep.cepRequest1();
            inValue.strcep = strcep;
            Controles.WsCep.cepResponse1 retVal = ((Controles.WsCep.wscepHttpPost)(this)).cep(inValue);
            return retVal.DataSet;
        }
    }
}
